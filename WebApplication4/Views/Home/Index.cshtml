@model  WebApplication4.ViewModels.HomeIndexViewModel
<link rel="stylesheet" href="/Content/index.css" type="text/css"/>
@{
    ViewBag.Title = "Home Page";
}
<div class="feed-container">
    @using Microsoft.AspNet.Identity
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "Post", FormMethod.Post, new {role = "form"}))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary("", new {@class = "text-danger"})
            <div class="create-post-form">
                @Html.TextAreaFor(x => x.postModel.Content, new{@class="post-content", required=""})
                <div class="post-additional-options">
                    <div class="post-video"></div>
                    <div class="post-image"></div>
                    <div class="post-link"></div>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-default submit-post" value="Create a post !"/>
                </div>
            </div>
        }
    }
    @Html.AntiForgeryToken()
    <div class="posts-container">
        @foreach (var post in Model.Posts)
        {
            if (post.ParentPost == null)
            {
                <div class="post message-div"  id="@post.Id">
                    <span>
                        Posted by <a href="/user/@post.UserAddress">
                            <b>@post.UserName</b>
                        </a> -
                        <b>
                            @if (@post.PostDateTime.ToShortDateString() == DateTime.Today.ToShortDateString())
                            {@post.PostDateTime.ToShortTimeString()
                            }
                            else
                            {
                                @post.PostDateTime.ToShortDateString()
                            }
                        </b>
                    </span>

                    <div class="vote-div">
                        <div class="votes-action downvote @if (post.CurrentUserVote < 0)
                                                          {<text>voted</text>
                                                          }">
                            <img src="~/Content/images/arrow-down-on-black-circular-background.svg"/>
                        </div>
                        <div class="votes">@post.Likes</div>
                        <div class="votes-action upvote @if (post.CurrentUserVote > 0)
                                                        {<text>voted</text>
                                                        }">
                            <img src="~/Content/images/arrow-up-on-a-black-circle-background.svg"/>
                        </div>
                    </div>
                    @if (post.PhotoLink != null)
                    {
                        <div class="post-media">
                            <img src="@post.PhotoLink" alt="post image"/>
                        </div>
                    }
                    else if (post.VideoLink != null)
                    {
                        <video width="400" height="400" controls>
                            <source src="@post.VideoLink" type="video/mp4">
                            Your browser does not support the video tag.
                        </video>
                    }
                    <p>@post.Content</p>
                    <div class="post-comments">
                        @foreach (var comment in Model.Posts)
                        {
                            if (comment.ParentPost != null && comment.ParentPost.Id == post.Id)
                            {
                                <div class="comment message-div" id="@comment.Id">
                                    <span>
                                        Posted by <a href="/user/@comment.UserAddress">
                                            <b>@comment.UserName</b>
                                        </a> -
                                        <b>
                                            @if (@comment.PostDateTime.ToShortDateString() == DateTime.Today.ToShortDateString())
                                            {@comment.PostDateTime.ToShortTimeString()
                                            }
                                            else
                                            {
                                                @comment.PostDateTime.ToShortDateString()
                                            }
                                        </b>
                                    </span>
                                    <div class="vote-div">

                                        <div class="votes-action downvote @if (comment.CurrentUserVote < 0)
                                                                          {<text>voted</text>
                                                                          }">
                                            <img src="~/Content/images/arrow-down-on-black-circular-background.svg"/>
                                        </div>
                                        <div class="votes">@comment.Likes</div>
                                        <div class="votes-action upvote @if (comment.CurrentUserVote > 0)
                                                                        {<text>voted</text>
                                                                        }">
                                            <img src="~/Content/images/arrow-up-on-a-black-circle-background.svg"/>
                                        </div>
                                    </div>
                                    <div class="comment-content">@comment.Content</div>
                                </div>
                            }
                        }
                        @using (Html.BeginForm("Create", "Post", FormMethod.Post, new {role = "form"}))
                        {
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary("", new {@class = "text-danger"})
                            @Html.TextAreaFor(x => x.postModel.Content, new {@class = "comment-box", placeholder = "Leave a comment....",required=""})
                            @Html.TextBoxFor(x => x.postModel.ParentPost, new {style = "display: none;", @Value = post.Id})

                            <input type="submit" class="btn btn-info post-comment" value="Post comment"/>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>
<script type="text/javascript" src="../../Content/js/posts-index-page.js"></script>
